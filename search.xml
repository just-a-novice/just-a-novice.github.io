<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>22.10.26刷题记录</title>
    <url>/2022/10/26/22-10-26%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="1694B-Paranoid-String"><a href="#1694B-Paranoid-String" class="headerlink" title="1694B Paranoid String"></a>1694B <a href="https://codeforces.com/problemset/problem/1694/B">Paranoid String</a></h1><p>题目大意：<br>有一个01字符串，我们可以作以下操作：</p>
<ul>
<li>对于子串$01$，将其变成$1$</li>
<li>对于字串$10$，将其变成$0$</li>
</ul>
<p>要求将其变成长度为1的字符串时要<strong>至少</strong>做多少次操作。<br>可以观察到：$01—&gt;1,10—&gt;0$,即为将其变成后面的字符<br>也就意味着如果当末尾的两个字符相同时:$xxxxx00或xxxxxx11$,将无解。</p>
<p>我们可以想象一下，假如我们从左向右遍历字符串，在第一处”10”进行了一次操作，<br>那么在下一个需要进行操作的地方也是”10”但是他在原字符串中是”01”.<br>000110<strong>01</strong>101—&gt;000111<strong>10</strong>010.<br>由此可以归纳出：</p>
<ul>
<li>当操作次数为偶数时，对原字符串中的”10”进行操作</li>
<li>为奇数时，对原字符串的”01”进行操作</li>
</ul>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line">ll n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="type">int</span> tt[<span class="number">100005</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    s=<span class="string">&#x27; &#x27;</span>+s;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    sum+=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=s[i<span class="number">-1</span>])&#123;</span><br><span class="line">           sum+=i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>另有一种巧妙的方法：<br>可以新建一个数组$a[n-1]$.$a[i]=1$当且仅当$b[i]==b[i+1]$<br>此时操作的次数便是$a[i]$中$1$的个数减$1$.</p>
<h1 id="1756B-Mainak-and-Interesting-Sequence"><a href="#1756B-Mainak-and-Interesting-Sequence" class="headerlink" title="1756B Mainak and Interesting Sequence"></a>1756B <a href="https://codeforces.com/problemset/problem/1726/B">Mainak and Interesting Sequence</a></h1><p>题目大意:<br>给两个数$n,m$,要求构造一个数组长度为$n$,且满足<script type="math/tex">\sum_{i=1}^n a_i=m</script></p>
<p>并且对于数组中每个元素$a_i$都有$a_j&lt;a_i(1\leq j\leq n)$且所有符合条件的$a_j$异或为$0$.</p>
<p>我们可以很快的确定,当$n&gt;m$时是无解的.</p>
<p>我们先从解决异或为$0$的要求入手，假设我们有两个数$a,b$，要使其异或为$0$,则必有$a=b$<br>但是如果有三个$a,b,c$，即使$a=b=c$，$a \oplus b \oplus c \neq 0$，由此可知需要进行异或的元素必须有相同的<strong>偶数</strong>个.<br>那哪些数是需要进行异或哪些不需要呢？<br>不需要异或的数是数组里最大的数，因此最大的数的出现次数偶数与奇数都不会有影响。</p>
<p>那要如何进行构造呢？</p>
<ul>
<li>当$n$为奇数时，我们可以将其拆分成偶数个相同的数与一个最大的数。</li>
<li>当$n$为偶数时，如果$m$为奇数，我们无法存在除了最大的数其余数出现偶数次的数组.[2]</li>
<li>当$n$为偶数时，如果$m$为偶数，我们可以构造有$n-2$长度值为$1$的<strong>偶数次</strong>数组，然后再加上两个值为$(m-(n-2))/2$的元素。</li>
</ul>
<p>代码如下:<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line">ll n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(y^=x^=y^=x%=y);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;m)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;m%<span class="number">2</span>==<span class="number">1</span>)&#123;cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;m-(n<span class="number">-1</span>)&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;m%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-2</span>;i++)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;(m-(n<span class="number">-2</span>))/<span class="number">2</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;(m-(n<span class="number">-2</span>))/<span class="number">2</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>22.10.27刷题记录</title>
    <url>/2022/10/27/22-10-27%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="AND-Sorting"><a href="#AND-Sorting" class="headerlink" title="AND Sorting"></a><a href="https://codeforces.com/problemset/problem/1682/B">AND Sorting</a></h1><p>题目大意:<br>给定一段长度为$n$的<strong>排列</strong>$p$(<em>permutation, from 0 to n-1, each  number occurs exactly once</em>),给定两个规则：</p>
<ul>
<li>选定$i,j(1\leq i&lt;j\leq n)$满足$p_i\&amp;p_j=X$</li>
<li>交换$p_i,p_j$</li>
</ul>
<p>要求求出能将$p$变成非递减序列的最大$X$.<br>我们可以这样想，要是$p$中有两个数需要交换$a&lt;-&gt;b$,此时还有一个数$X$在位置$c$$(X永远都会存在于p中)$，则我们有如下策略去进行交换：</p>
<ul>
<li>$p_i\&amp;p_j=X_1,p_i与p_j直接交换$</li>
<li>$寻找一个数X满足p_i\&amp;X=X,p_j\&amp;X=X,先交换p_i与X，再交换X与p_j$</li>
</ul>
<p>我们可以很容易证明两种策略得到的$X$均相同,否则$X_1=(1&lt;&lt;(k+1))-1$$(k为X的位数)$。</p>
<script type="math/tex; mode=display">p_i\&X\&p_j=X=X_1\&X</script><p>所以我们只需要把$(1&lt;&lt;(k+1))-1$与所有需要交换的数<em>AND</em>起来即可。<br>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n+<span class="number">3</span>)</span></span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; tm;<span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ans=(<span class="number">1</span>&lt;&lt;<span class="number">30</span>)<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;v[i];</span><br><span class="line">        <span class="keyword">if</span>(v[i]!=i)&#123;</span><br><span class="line">            ans&amp;=v[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//if(maxx==INF)maxx=0;</span></span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Circular-Local-MiniMax"><a href="#Circular-Local-MiniMax" class="headerlink" title="Circular Local MiniMax"></a><a href="https://codeforces.com/problemset/problem/1685/A">Circular Local MiniMax</a></h1><p>题目大意:<br>给定一个数组$a$长度为$n(n\geq 3)$,将其重排列是否能形成一个数组$b$满足对于所有$i(1\leq i\leq n)$使得$b_i$满足以下之一:</p>
<ul>
<li>$ b_{i-1}&lt; b_i &gt;b_{i+1} $</li>
<li>$b_{i-1}&gt;b_i&lt;b_{i+1}$</li>
<li>当$i=1,b_{i-1}=b_n,i=n时,b_{i+1}=b_1$</li>
</ul>
<p>我们可以很容易证明$a$长度为奇数时是总是不存在的:</p>
<ul>
<li><p>假设前$(n-1)$的元素是满足要求的，<br>即$b_{n-2} &lt; b_{n-1} &gt; b_1$或者$b_{n-2} &gt; b_{n-1} &lt; b_1$,<br>先假设为前者，则当第$n$个元素添加在末尾时是否存在任意一个数$b_n$能满足要求<br>由于是$b_{n-1} &gt; b_{n-2}$,则$b_n$应当满足$b_{n-1} &gt; b_n&lt;b_1$,<br>但是又有$b_1 &lt;b_{n-1}$,此时也要满足$b_1 &lt; b_n$,条件矛盾，而后者的情况也应该是一样的</p>
</li>
<li><p>那我们讨论当前$(n-2)$是满足条件时的情况,添加一个元素至$n-1$时总是不可能的,<br>当一次添加两个元素时，还是假设前者$b_{n-3} &lt; b_{n-2} &gt; b_1$，我们可以添加两个元素，<br>满足$ \{b_{n-1} , b_{n}\} -&gt; (b_{n-2} &gt; b_{n-1} &lt; b_{n}),(b_{n-1} &lt; b_n &gt; b_1)$.</p>
</li>
</ul>
<p>而当$a$长度$n=3$时假设已知有元素$\{a_1,a_2\}(a_1&lt;a_2)$此时添加第三个元素$a_3$,<br>无论$a_3$等于多少都不能构造出$b$,由此递推当$n=4$时是可以存在的,<br>而$n=4+2k(k=1,2,…)$都会存在,$n=3+2k(k=1,2,…)$都不存在。</p>
<p>此时当$n$为偶数时$a$可能可以构造出$b$,先对$a$进行排序。<br>我们总是可以构造出$b=\{a_1,a_{\frac{n}{2}+1},a_2,a_{\frac{n}{2}+2},…\}$<br>只需要判断是否$a_1=a_{\frac{n}{2}+1}||a_2=a_{\frac{n}{2}+1}$</p>
<p>AC代码:<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        v.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">2</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n/<span class="number">2</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(v[i]==v[n/<span class="number">2</span>+i]||(v[i]==v[n/<span class="number">2</span>+i<span class="number">-1</span>]&amp;&amp;i&gt;=<span class="number">1</span>))&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n/<span class="number">2</span>;i++)&#123;</span><br><span class="line">            cout&lt;&lt;v[i]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;v[n/<span class="number">2</span>+i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="A-B-C-Sort"><a href="#A-B-C-Sort" class="headerlink" title="A-B-C Sort"></a><a href="https://codeforces.com/problemset/problem/1674/D">A-B-C Sort</a></h1><p>题目大意:<br>有三个数组$A,B,C$其中$A$已经给出,$B,C$均为空，有如下规则:</p>
<ul>
<li>先将$A$元素从末尾开始插入$B$数组的中间,<br>当$B$长度为奇数可以选择插入到中间的左还是右</li>
<li>然后将$B$中的元素从中间开始插入$C$的末尾,<br>如果$B$的长度为偶数,可以选择将中间的左还是右插入$C$末尾</li>
</ul>
<p>按照以上规则判断是否能构造出$C$是非递减的。<br>观察规则，我们可以知道$\{a_n,a_{n-1}\}$是可以以任意的顺序放在$B$数组的中间，<br>然后以任意的顺序放在$C$的$\{c_{n-1},c_{n}\}$，因此，$A$可以分为多个$pair$，<br>$\{a_n,a_{n-1}\},\{a_{n-2},a_{n-3}\}$…每个$pair$内可以交换顺序，最后$A$是否能有序即为$C$是否能有序。<br>代码:<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> xx;</span><br><span class="line">        cin&gt;&gt;xx;</span><br><span class="line">        v.<span class="built_in">push_back</span>(xx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=v.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;<span class="number">0</span>;i-=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i]&lt;v[i<span class="number">-1</span>])&#123;</span><br><span class="line">            <span class="type">int</span> tmp=v[i];</span><br><span class="line">            v[i]=v[i<span class="number">-1</span>];</span><br><span class="line">            v[i<span class="number">-1</span>]=tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">is_sorted</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>()))&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Unequal-Array"><a href="#Unequal-Array" class="headerlink" title="Unequal Array"></a><a href="https://codeforces.com/problemset/problem/1672/C">Unequal Array</a></h1><p><img src="last.jpg" alt="题目自己看"></p>
<p>对于这种关于$a_i=a_{i+1}$的题目我们可以关注一下构造一个长度为$n-1$的$b$数组，<br>当$a_i=a_{i+1}$时$b_i=1$，否则$b_i=0$。<br>则对于题目的目标，就是要将$b$数组中$1$的个数降为$1或0$.<br>然后观察规则与$b$数组的关系:</p>
<ul>
<li>当$b$只有$11$时，最小次数为0；</li>
<li>当$b$中有$101$时，要将其变成$11$，次数为1；</li>
<li>当$b$中有$1001$时，或者中间更多0，此时次数为$j-i-1$,<br>$j为最后一个1的下标，i为第一个1的下标$</li>
</ul>
<p>代码:<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span> &gt; v;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">d</span><span class="params">(n+<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;d[i];</span><br><span class="line">    &#125;</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[i]==d[i+<span class="number">1</span>])&#123;</span><br><span class="line">            v.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> v.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;<span class="type">int</span> fi=<span class="number">0</span>,la=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i]==<span class="number">1</span>)&#123;</span><br><span class="line">            fi=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=v.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i]==<span class="number">1</span>)&#123;</span><br><span class="line">            la=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(la-fi==<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(la-fi==<span class="number">2</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(la==fi)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;la-fi<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>22.10.30刷题记录</title>
    <url>/2022/10/30/22-10-30%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="Build-the-Permutation"><a href="#Build-the-Permutation" class="headerlink" title="Build the Permutation"></a><a href="https://codeforces.com/problemset/problem/1608/B">Build the Permutation</a></h1><p><img src="a.jpg" alt=""><br>Local Maximums/Local Minimums问题，<br>由题目我们可以很容易知道，$a+b\leq n-2$，因为当整个序列都是Local Max或Local Min时最左与最右都不能成为Local Max或Local Min.<br>并且$|a-b|\leq 1$因为每两个LMax之间一定有一个LMin，两个Lmin间必有一个LMax.<br>我们可以首先把最大的$a+b+2$个元素拿出来构造LMin与Lmax,至于为什么要$+2$，因为最左边与最右边是不能作为LMin与LMax的，然后剩下的$n-(a+b+2)$则按顺序输出。当$a\geq b$时可以先输出那$n-(a+b+2)$然后再输出那$(a+b+2)$个数，此时可以保证LMax个数多于LMin，<br>vice versa.<br>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;<span class="type">int</span> m;<span class="type">int</span> n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(a-b)&gt;<span class="number">1</span>||a+b&gt;n<span class="number">-2</span>)&#123;cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        vector&lt;PII&gt; v;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;=b)&#123;</span><br><span class="line">            <span class="type">int</span> res=n-(a+b+<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=res;i++)&#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;<span class="type">int</span> l=res+<span class="number">1</span>,r=n;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n-res;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                    cout&lt;&lt;(r--)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    cout&lt;&lt;(l++)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> res=n-(a+b+<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;n-res;i--)&#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;<span class="type">int</span> l=n-res,r=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n-res;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                    cout&lt;&lt;(l--)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    cout&lt;&lt;(r++)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>当然也可以直接只算$a\geq b$的情况，然后$a&lt; b$的情况直接由$a\geq b$得到的序列$q$中每一个元素替换为$q_i=n-q_i+1$.<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;<span class="type">int</span> m;<span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(a-b)&gt;<span class="number">1</span>||a+b&gt;n<span class="number">-2</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">        <span class="type">int</span> res=n-(a+b+<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=res;i++)&#123;v.<span class="built_in">push_back</span>(i);&#125;</span><br><span class="line">        <span class="type">int</span> l=res+<span class="number">1</span>,r=n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n-res;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                v.<span class="built_in">push_back</span>(r);r--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                v.<span class="built_in">push_back</span>(l);l++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;=b)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i:v) &#123;cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> &amp;i:v)&#123;</span><br><span class="line">                i=n-i+<span class="number">1</span>;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Di-visible-Confusion"><a href="#Di-visible-Confusion" class="headerlink" title="Di-visible Confusion"></a><a href="https://codeforces.com/problemset/problem/1603/A">Di-visible Confusion</a></h1><p><img src="b.jpg" alt=""><br>这个题目要注意一下是<strong>not divisable</strong>，我看半天才发现题目看错了(•ิ_•ิ)。<br>我们可以先记录一下初始数组有哪些是可以消去的，然后打个标记。遍历完后，再从头开始遍历直到到达不能消去的点，然后往前找是否有可以消去当前数字的位置，如果没有直接输出no，当且仅当整个数组都已经打上标记后才能输出yes<br>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;<span class="type">int</span> m;<span class="type">int</span> n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n+<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">vis</span><span class="params">(n+<span class="number">3</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;v[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;<span class="keyword">if</span>(v[i]%(<span class="number">1</span>+i)!=<span class="number">0</span>)&#123;vis[i]=<span class="number">1</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">if</span>(!vis[<span class="number">1</span>])&#123;cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i])<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(v[i]%(j+<span class="number">1</span>)!=<span class="number">0</span>)&#123;</span><br><span class="line">                    vis[i]=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i])&#123;cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Divine-Array"><a href="#Divine-Array" class="headerlink" title="Divine Array"></a><a href="https://codeforces.com/contest/1602/problem/B">Divine Array</a></h1><p><img src="c.jpg" alt=""><br>这个观察样例就大概能推出这些数组在进行一定次数操作后一定会保持同一种状态。<br>因此只要模拟操作知道当前数组与前一种操作时的数组一样就结束模拟。<br>能用vector就不要用map了太容易超时了(•ิ_•ิ)。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;<span class="type">int</span> m;<span class="type">int</span> n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; a;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mp</span><span class="params">(n+<span class="number">1</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mp2</span><span class="params">(n+<span class="number">1</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        cin&gt;&gt;v[i];</span><br><span class="line">        mp[v[i]]++;</span><br><span class="line">    &#125;a.<span class="built_in">push_back</span>(v);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">tmp</span><span class="params">(n)</span></span>;</span><br><span class="line">    tmp=v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        tmp[i]=mp[v[i]];mp2[tmp[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    a.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">1</span>;mp.<span class="built_in">clear</span>();mp=mp2;</span><br><span class="line">    <span class="keyword">while</span>(a[cnt]!=a[cnt<span class="number">-1</span>])&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ttmp</span><span class="params">(n)</span></span>;</span><br><span class="line">        a.<span class="built_in">push_back</span>(ttmp);</span><br><span class="line">        cnt++;a[cnt]=a[cnt<span class="number">-1</span>];</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">t3</span><span class="params">(n+<span class="number">1</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            a[cnt][i]=mp[a[cnt][i]];</span><br><span class="line">            t3[a[cnt][i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        mp=t3;</span><br><span class="line">    &#125;<span class="type">int</span> q;cin&gt;&gt;q;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> xx;cin&gt;&gt;xx&gt;&gt;k;</span><br><span class="line">        <span class="keyword">if</span>(k&gt;a.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;cout&lt;&lt;a[a.<span class="built_in">size</span>()<span class="number">-1</span>][xx<span class="number">-1</span>]&lt;&lt;<span class="string">&quot;\n&quot;</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;cout&lt;&lt;a[k][xx<span class="number">-1</span>]&lt;&lt;<span class="string">&quot;\n&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Hemose-Shopping"><a href="#Hemose-Shopping" class="headerlink" title="Hemose Shopping"></a><a href="https://codeforces.com/problemset/problem/1592/B">Hemose Shopping</a></h1><p><img src="d.jpg" alt=""><br>这个题目可以把$x$具体为一个可以移动的区间，类似于拿一块长条遮住数组中任意连续的长度为$x-1$(因为是$|i-j|\geq x -&gt;等于也能满足$)的区间，然后区间的两边可以交换，即左能去右，右能去左，但是被遮住的部分不能移动，因此可以推出，当$x&lt;=n/2$时一定是每个位置都相互连通。然后考虑当$x&gt;n/2$时的极限情况，长条在数组最左边和最右边覆盖的交集就是无论长条如何移动都不能进行交换的位置，因此只需考虑这个区间是否有序即可。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bit/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;<span class="type">int</span> m;<span class="type">int</span> n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;x;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> xx;cin&gt;&gt;xx,v.<span class="built_in">push_back</span>(xx);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v2;v2=v;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;n<span class="number">-1</span>&amp;&amp;!<span class="built_in">is_sorted</span>(<span class="built_in">All</span>(v)))&#123;cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=n/<span class="number">2</span>||x&lt;=<span class="number">1</span>)&#123;cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="built_in">sort</span>(<span class="built_in">All</span>(v));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n-x;i&lt;=x<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v2[i]!=v[i])&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>22.10.28刷题记录</title>
    <url>/2022/10/28/22-10-28%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p><font size="5">今天的题有点简单捏(´；ω；‘)</font></p>
<h1 id="Make-Equal-With-Mod"><a href="#Make-Equal-With-Mod" class="headerlink" title="Make Equal With Mod"></a><a href="https://codeforces.com/problemset/problem/1656/C">Make Equal With Mod</a></h1><p>题目大意:<br>给定一个数组$a$,能进行以下操作:</p>
<ul>
<li>选定一个$x(x\geq 2)$</li>
<li>对每个$a_i$,对$a_i$赋值为$a_i\%x$</li>
</ul>
<p>问最终能不能将数组所有元素都变成一个数。<br>由于$x$是大于等于$2$的，因此对于任意一个大于等于$2$的数都可以变为$1$或$0$，<br>因此我们可以把所有的数都变成$0$或者变成$1$。<br>但当数组中有$1$时就不能有$0$或$2$(自己想)</p>
<p>题目中还有一个坑，假如有$a=\{1,3,3,3,3,4\}$数组中有$1$但没有$0$和$2$,但无论把哪个数变成$1$后都会有一个数变成$0$.</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; se;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> xx;</span><br><span class="line">        cin&gt;&gt;xx;</span><br><span class="line">        v.<span class="built_in">push_back</span>(xx);</span><br><span class="line">        <span class="keyword">if</span>(!se.<span class="built_in">count</span>(xx))&#123;</span><br><span class="line">            se.<span class="built_in">insert</span>(xx);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(se.<span class="built_in">count</span>(<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(se.<span class="built_in">count</span>(<span class="number">2</span>)||se.<span class="built_in">count</span>(<span class="number">0</span>))&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>()<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(v[i+<span class="number">1</span>]-v[i]==<span class="number">1</span>)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Twist-the-Permutation"><a href="#Twist-the-Permutation" class="headerlink" title="Twist the Permutation"></a><a href="https://codeforces.com/problemset/problem/1650/D">Twist the Permutation</a></h1><p><img src="second.jpg" alt="题目太长了自己看"></p>
<p>题目的操作是从$1$开始到$n$，也就意味着在给出结果数组时可以从$n$开始逆推出开始的数组，<br>剩下的就是记录下操作的次数。<br>如何逆推出操作的次数呢?<br>数组的下标从$0$开始，我们目前手上有一个在做完所有操作后的数组，最后的操作一定是对$n$的操作，<br>也就是找到$n$的位置就可以找出对$n$的操作次数，设当前$n$的位置为$index$，则操作次数为:</p>
<script type="math/tex; mode=display">(index+1)\%n</script><p>推广到$i$上:</p>
<script type="math/tex; mode=display">(index+1)\%i</script><p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n+<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;v[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n+<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="type">int</span> ind=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(v[j]==i)&#123;</span><br><span class="line">                ind=j;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(i)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            b[j]=v[(ind+<span class="number">1</span>+j)%i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            v[j]=b[j];</span><br><span class="line">        &#125;</span><br><span class="line">        ans[i]=(ind+<span class="number">1</span>==i)?<span class="number">0</span>:(ind+<span class="number">1</span>)%i;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Madoka-and-the-Elegant-Gift"><a href="#Madoka-and-the-Elegant-Gift" class="headerlink" title="Madoka and the Elegant Gift"></a><a href="https://codeforces.com/problemset/problem/1647/B">Madoka and the Elegant Gift</a></h1><p><img src="3.jpg" alt="题目也很长"></p>
<p>我们很容易知道，当$n=1||m=1$时，恒成立。<br>当$n\neq 1\&amp;\&amp;m\neq 1$时，每个$2 \times 2$的区域中不能有$3$个$1$.<br>因为当存在有$3$个$1$的$2 \times 2$区域时就意味着有两个矩形$intersecting$.<br>代码:<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits./stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">char</span> c[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line">    <span class="type">int</span> a[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;c[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>||m==<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            a[i][j]=c[i][j]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="type">int</span> ss=a[i][j]+a[i+<span class="number">1</span>][j]+a[i][j+<span class="number">1</span>]+a[i+<span class="number">1</span>][j+<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(ss==<span class="number">3</span>)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Differential-Sorting"><a href="#Differential-Sorting" class="headerlink" title="Differential Sorting"></a><a href="https://codeforces.com/problemset/problem/1635/C">Differential Sorting</a></h1><p>题目大意:<br>有一个数组$a$，能对这个数组进行一个操作：<br><em>选择$3$个整数$x,y,z(1\leq x &lt; y &lt; z \leq n)$，将$a_x$替换成$a_y-a_z$</em><br>要求将$a$变成非递减数组。</p>
<p>对于这题从前面找没什么头绪，我们可以从末尾开始。<br>由题目可以知道$x \neq n,x \neq n-1$，因此当$a_{n-1} &gt; a_n$时题目无解。<br>因此仅当$a_{n-1} \leq a_n$时题目有可能有解。<br>再而，当$a_n \geq 0$时，$a_{n-1}-a_n &lt; a_{n-1}$，我们可以轻松构造出一个解：</p>
<script type="math/tex; mode=display">\{a_{n-1}-a_{n},a_{n-1}-a_{n},a_{n-1}-a_{n},...,a_{n-1},a_n \}</script><p>当$a_n &lt; 0$时，由于$a_{n-1} \leq a_n &lt; 0$，此时$a_{n-1} -a_n &gt; a_{n-1}$，<br>因此$a_{n-2} \leq a_{n-1}$才能满足条件，由此类推，当且仅当:</p>
<script type="math/tex; mode=display">\{a_1 \leq a_2 \leq a_3 ....a_{n-2} \leq a_{n-1} \leq a_n\}</script><p>也即原数组非递减时成立。</p>
<p>代码:<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> d;</span><br><span class="line">        cin&gt;&gt;d;</span><br><span class="line">        v.<span class="built_in">push_back</span>(d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(v[n<span class="number">-2</span>]&gt;v[n<span class="number">-1</span>])&#123;cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(v[n<span class="number">-1</span>]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;n<span class="number">-2</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-2</span>;i++)&#123;</span><br><span class="line">            cout&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n<span class="number">-1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">is_sorted</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>()))&#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Division-by-Two-and-Permutation"><a href="#Division-by-Two-and-Permutation" class="headerlink" title="Division by Two and Permutation"></a><a href="https://codeforces.com/problemset/problem/1624/C">Division by Two and Permutation</a></h1><p><img src="5.jpg" alt="题目"></p>
<p>我们可以对所有数进行模拟，构造一个$cover$数组表明该数是否已经有数可以满足了。<br>然后对每个数不断进行除$2$，直到$cover[x]=false$，然后将$cover[x]:=true$.<br>但是这种有个缺陷，可能导致两个数覆盖同一个数。<br>我们可以采取以下的贪心：<br>对于大的数而言，它可以覆盖大的数也可以覆盖小的数，而对于小的数，它只能覆盖小的数。<br>因此我们可以先将所有数进行从大到小的排序，然后从大到小进行覆盖，尽量把小的数留给小的数来覆盖，大的数覆盖尽量大的数。</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; tm;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> xx;</span><br><span class="line">        cin&gt;&gt;xx;</span><br><span class="line">        v.<span class="built_in">push_back</span>(xx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),[](<span class="type">int</span> a,<span class="type">int</span> b)&#123;<span class="keyword">return</span> a&gt;b;&#125;);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(v[i])&#123;</span><br><span class="line">            <span class="keyword">if</span>(v[i]&lt;=n)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!tm.<span class="built_in">count</span>(v[i]))&#123;</span><br><span class="line">                    tm.<span class="built_in">insert</span>(v[i]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            v[i]&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!tm.<span class="built_in">count</span>(i))&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>22.10.29刷题记录</title>
    <url>/2022/10/29/22-10-29%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>今天刚打完一场(div1+div2)，开始20分钟就到了两千名，后面越做越不想做，<br>最后掉到了四千…(“▔□▔)，应该再打一场名字就能换颜色了。</p>
<h1 id="Factorise-N-M"><a href="#Factorise-N-M" class="headerlink" title="Factorise N+M"></a><a href="https://codeforces.com/contest/1740/problem/A">Factorise N+M</a></h1><p><img src="a.jpg" alt=""><br>解题方法:<br><del>有手就行</del>。答案就是n。</p>
<h1 id="Jumbo-Extra-Cheese-2"><a href="#Jumbo-Extra-Cheese-2" class="headerlink" title="Jumbo Extra Cheese 2"></a><a href="https://codeforces.com/contest/1740/problem/B">Jumbo Extra Cheese 2</a></h1><p><img src="b.jpg" alt=""></p>
<p><img src="bstep.jpg" alt="数据&quot;4 4 1 4 5 1 1 2 3 的解决方案&quot;"><br>今天刚打的(div1+div2)场的B题，有点简单，一发就过，记得开long long。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    ll h=<span class="number">0</span>;ll bo=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ll a,b;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;=b)&#123;</span><br><span class="line">            h=<span class="built_in">max</span>(a,h);</span><br><span class="line">            bo+=b;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            h=<span class="built_in">max</span>(b,h);</span><br><span class="line">            bo+=a;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">2</span>*h+<span class="number">2</span>*bo;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><del><strong>题目的测试数据太弱了，代码思路有点bug都过了，等一个英雄来发现。</strong></del><br>根本没有bug捏，我看错题目了/</p>
<p>C、D题明天再补充吧。</p>
<hr>
<p>22.11.1 更新</p>
<h1 id="Bricks-and-Bags"><a href="#Bricks-and-Bags" class="headerlink" title="Bricks and Bags"></a><a href="https://codeforces.com/contest/1740/problem/C">Bricks and Bags</a></h1><p><img src="c.jpg" alt=""><br>先把$a$排序一遍肯定没有错。<br>然后我们考虑取$block$的情况的可能：<br>设$block$的下标为$p1,p2,p3$</p>
<ul>
<li>$p1&lt;p2&lt;p3$</li>
<li>$p1&gt;p2&gt;p3$</li>
<li>$p1&lt; p2 &gt;p3$</li>
<li>$p1&gt; p2 &lt;p3$</li>
</ul>
<p>其中第一第二种情况必定不可能出现，因为不可能是最优解，所以放$block$的人肯定不会让这种情况出现。<br>即考虑第三第四种情况：<br>第三种情况时，将$0$放入$p1或p3$一定不会丢失最优解，而另外两个$p2,pi(i=1或3)$有$pi=p2-1$(因为取$block$的人会采取最优决策)此时只需要枚举$p2$即可.<br>第四种情况与第三种类似，只是$0$换为$n$，$pi=p2+1$.</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;<span class="type">int</span> m;<span class="type">int</span> n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;ll &gt; a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        ll xx;cin&gt;&gt;xx;</span><br><span class="line">        a.<span class="built_in">push_back</span>(xx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(<span class="built_in">All</span>(a));</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-2</span>;i++)&#123;</span><br><span class="line">        ans=<span class="built_in">max</span>(a[i+<span class="number">1</span>]-a[i]+a[n<span class="number">-1</span>]-a[i],ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        ans=<span class="built_in">max</span>(a[i]-a[i<span class="number">-1</span>]+a[i]-a[<span class="number">0</span>],ans);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>22.11.2刷题记录</title>
    <url>/2022/11/02/22-11-2%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>好久没更刷题记录了，最近太忙了，在搞些杂七杂八的比赛，然后在研究组合数学，还要准备期中考试，人间地狱莫过于此，但还是有在刷题的，只是没时间码字而已。突然想起英语作文还没写。。。</p>
<p>今天做点简单的题缓解下心情。</p>
<h1 id="Omkar-and-Heavenly-Tree"><a href="#Omkar-and-Heavenly-Tree" class="headerlink" title="Omkar and Heavenly Tree"></a><a href="https://codeforces.com/problemset/problem/1583/B">Omkar and Heavenly Tree</a></h1><p><img src="a1.jpg" alt=""><br><img src="a2.jpg" alt=""></p>
<p>这道题是主要是要观察数据范围细节$(1\leq m&lt;n)$<br>$m$个约束也就意味着受约束的$b$点个数最多不会超过$n$个，因此我们只要以那个没出现在$b$的节点为根，其他节点为叶子即可。</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n+<span class="number">3</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> xx,xx1,xx2;</span><br><span class="line">        cin&gt;&gt;xx&gt;&gt;xx1&gt;&gt;xx2;</span><br><span class="line">        v[xx1]++;</span><br><span class="line">    &#125;<span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!v[i])&#123;r=i;<span class="keyword">break</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n ; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==r)<span class="keyword">continue</span>;</span><br><span class="line">        cout&lt;&lt;r&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Diameter-of-Graph"><a href="#Diameter-of-Graph" class="headerlink" title="Diameter of Graph"></a><a href="https://codeforces.com/problemset/problem/1581/B">Diameter of Graph</a></h1><p><img src="b.jpg" alt=""><br>题目要求的是连通简单图，即<script type="math/tex">n-1\leq m \leq \frac{n(n-1)}{2}</script></p>
<p>同时，我们还要判断$distance$与$k-1$的大小。<br>我们很容易知道，当且仅当$m=\frac{n(n-1)}{2}$时，也即是完全图时，$distance=1$，其他情况时$distance=2$，同时还要对$n=1$的情况进行特判。</p>
<p>刚开始顺着加边的思路把代码写下去，把代码写复杂了：<br>先选择从某个节点开始向每一个节点连一条边，需要$n-1$条边，此时的$distance=2$，<br>要想将$distance$变成$1$需要将其变成完全图，即在$n-1$的基础上加上$\frac{(n-1)(n-2)}{2}$条边。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;ll m;ll n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    ll ma=n*(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(m&gt;ma||m&lt;n<span class="number">-1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="type">int</span> ds=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(m&lt;(ll)((n<span class="number">-1</span>)+(n<span class="number">-1</span>)*(n<span class="number">-2</span>)/<span class="number">2</span>))&#123;</span><br><span class="line">        ds=<span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> ds=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)ds=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(ds&lt;k<span class="number">-1</span>)&#123;cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Mocha-and-Hiking"><a href="#Mocha-and-Hiking" class="headerlink" title="Mocha and Hiking"></a><a href="https://codeforces.com/problemset/problem/1559/C">Mocha and Hiking</a></h1><p><img src="c.jpg" alt=""><br>这题主要是考察是否能将节点$n+1$加入从$1到n$的路径中<br>我们可以发现，$n+1$可以从三个地方加入到$1~n$的路径中:</p>
<ul>
<li>从$1$节点前加入，这种情况要求$a_1=1$此时我们可以看作从$n+1$节点开始。</li>
<li>从$n$节点后加入，这种情况要求$a_n=0$</li>
<li>从中间的节点加入，这种情况要求存在$a_i=0,a_{i+1}=1$</li>
</ul>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits.stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;ll m;ll n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n+<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;v[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(v[<span class="number">1</span>]==<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;n+<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(v[i]==<span class="number">0</span>&amp;&amp;v[i+<span class="number">1</span>]==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">                    cout&lt;&lt;j&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cout&lt;&lt;n+<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                    cout&lt;&lt;j&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(v[n]==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2022/10/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>折腾了一晚上终于搭建好自己的博客了orz,后面还打了一场热身赛，<br>太简单了……<br>后续会在上面更新每天的刷题心得与思考的，一起加油。</p>
]]></content>
  </entry>
  <entry>
    <title>Introductory Combinatorics</title>
    <url>/2022/10/31/Introductory-Combinatorics/</url>
    <content><![CDATA[<p>我们来读一下组合数学$Introductory\ Combinatorics$</p>
<hr>
<h1 id="Chapter-1"><a href="#Chapter-1" class="headerlink" title="Chapter 1"></a>Chapter 1</h1><h2 id="ep1-棋盘的完美覆盖"><a href="#ep1-棋盘的完美覆盖" class="headerlink" title="ep1:棋盘的完美覆盖"></a>ep1:棋盘的完美覆盖</h2><p>考虑如果有一个$8 \times 8$的棋盘，要用$dominoes$来完全覆盖$(perfect\ cover)$，<br>每个$dominoe$可以覆盖连续的两个方格，我们可以很快的构造出许多不同的方案来满足。<br>但是如果将这个棋盘扩展到$n\times m$呢？我们又怎么知道是否有一种方案满足。</p>
<p>我们可以把一个$dominoe$看作一片半黑半白的方块：<br><img src="g1-1.jpg" alt="dominoe"><br>再把方块填入棋盘的空格，然后把棋盘的其中一个方块涂黑，再放下一个$dominoe$，但下一个$dominoe$的黑色部分不能与棋盘上的黑色方块相邻，这样的策略是允许$dominoe$可以选择竖着放还是横着放，颜色状态都是同相同的：<br><img src="g1-2.jpg" alt="摆放策略"></p>
<p>这样我们只需要在最后统计黑白颜色方块个数是否相等即可。<br>但如果我们把$dominoes$扩展成$b-ominoes$(由$b$个方块组成，$dominoe$又为$2-ominoes$)呢？</p>
<p>我们正常放$b-ominoes$在$n\times m$的棋盘里的每一行，可能每一行都会有些空格长度$r&lt;b$，或者放在每一列都会有留空$s&lt;b$，此时可以列出:</p>
<script type="math/tex; mode=display">n=pb+s</script><script type="math/tex; mode=display">m=qb+r</script><p>此时我们可以把棋盘分成三部分:<br><img src="g1-3.jpg" alt=""><br>第一部分:上方区域$qb \times n$大小<br>第二部分:左下方区域$r \times pb$大小<br>第三部分:右下方区域$r \times s$大小</p>
<p>此时我们可以看出，如果要棋盘可以被完全覆盖，第三部分的$r \times s$的每一行或每一列的所有元素要出现一次，即：$r \times s =r \times b或r \times s =s \times b$</p>
<p>可以得到:$r=b$或$s=b$，即$n与m$至少一个是$b$的倍数，此时棋盘可以被$b-ominoes$完全覆盖。</p>
<h2 id="ep2-幻方-Magic-Square"><a href="#ep2-幻方-Magic-Square" class="headerlink" title="ep2: 幻方($Magic\ Square$)"></a>ep2: 幻方($Magic\ Square$)</h2><p>幻方是一个$n \times n$的矩阵，其中矩阵的每一行之和，每一列之和，每一对角线之和都相等，那我们应该怎样才能构造一个幻方。<br>下面给出$de\ la\ loubere$构造$n$为奇数的幻方的方法:<br>先把$1$放在最上面的行的中间，然后按自然数顺序放置下一个数，将其按斜向上的方向放在当前数的对角线上，下面是边界处理：</p>
<ul>
<li>当到达最上面的行时，则下一个数放在最下面一行(按原本的方向)，然后在当前位置继续  </li>
<li>当到达最右边时，放到最左边。</li>
<li>如果下一个位置已经有数了，则直接放在当前数的下方。</li>
</ul>
<p>(别问我，我不知道原理)</p>
<p><img src="g1-4.jpg" alt="5*5幻方"></p>
<p>将二维幻方推广到三维幻方，我们可以计算出每行每列每对角线的和：</p>
<script type="math/tex; mode=display">n^2 \times s=\frac{n^3(n^3+1)}{2}->s=\frac{n^4+n}{2}</script><p>此时我们可以证明出当$n=3$时不存在幻方。<br>假设：</p>
<script type="math/tex; mode=display">\begin{bmatrix}a & b & c\\ d & y & e \\ f & g & h\end{bmatrix}</script><p>此时可以列出:</p>
<script type="math/tex; mode=display">a+y+h=42</script><script type="math/tex; mode=display">d+y+e=42</script><script type="math/tex; mode=display">f+y+c=42</script><script type="math/tex; mode=display">a+d+f=42</script><script type="math/tex; mode=display">c+e+h=42</script><p>可以得到$y=14$，也就意味着对于每一个面，中间的元素一定要是$14$，但是每个地方的数字是不能重复的，因此矛盾。</p>
<p>今天到这了，还没洗澡。 (/ﾟДﾟ)/</p>
<hr>
<p>更新于22.10.31</p>
]]></content>
  </entry>
  <entry>
    <title>22.11.3刷题记录</title>
    <url>/2022/11/03/22-11-3%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>最近压力好大，舍友好卷，任务好多，老规矩刷刷题缓解下心情。</p>
<h1 id="Coin-Rows"><a href="#Coin-Rows" class="headerlink" title="Coin Rows"></a><a href="https://codeforces.com/problemset/problem/1555/C">Coin Rows</a></h1><p><img src="a.jpg" alt=""></p>
<p>由题意我们可以知道当其中一个人往下走了之后就不能再走上面的道路，就只能继续走下面，由此，我们可以枚举$Alice$在哪个位置往下走留给$Bob$的分数最小。</p>
<p>至于这个思路如何实现，我们可以分别维护第一行的数量的后缀和以及第二行数量的前缀和，因为一旦选中了在哪个位置往下走，这个位置右边的第一行是$Bob$可以得分的方块，这个位置左边的第二行也是$Bob$可以得分的方块，而得到的分数分别是后缀和于前缀和，接下来只需要比较大小即可。</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;ll m;ll n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">m1</span><span class="params">(m+<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sum1</span><span class="params">(m+<span class="number">2</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">m2</span><span class="params">(m+<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sum2</span><span class="params">(m+<span class="number">2</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;cin&gt;&gt;m1[i];&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;cin&gt;&gt;m2[i];&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;sum2[i]=sum2[i<span class="number">-1</span>]+m2[i];&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=m;i&gt;=<span class="number">1</span>;i--)&#123;sum1[i]=sum1[i+<span class="number">1</span>]+m1[i];&#125;</span><br><span class="line">    <span class="type">int</span> ans=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        ans=<span class="built_in">min</span>(ans,<span class="built_in">max</span>(sum2[i],sum1[i+<span class="number">2</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Co-growing-Sequence"><a href="#Co-growing-Sequence" class="headerlink" title="Co-growing Sequence"></a><a href="https://codeforces.com/problemset/problem/1547/D">Co-growing Sequence</a></h1><p><img src="b.jpg" alt=""><br>这题考察的是位处理。<br>可以用归纳法来处理，<br>假设前$i-1$项都是满足条件的，我们令$(x_{i-1} \oplus y_{i-1})=t$对于第$i$项$(x_i \oplus y_i)$来说，要使得:$t\&amp; (x_i \oplus y_i) =t$，则$(x_i \oplus y_i)$每一二进制位都需要满足：</p>
<ul>
<li>当$t$的某一位为$1$时对应的位一定为$1$</li>
<li>当$t$的某一位为$0$时对应的位尽量为$0$</li>
</ul>
<p>因此在$(x_i \oplus y_i)$中，对于$y_i$而言，当且仅当$x_i$与$t$对应位分别为$0$与$1$时$y_i$的对应位才为$1$（因为要求的是最小字典序）</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++/h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;ll m;ll n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="type">int</span> mb=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> xx;cin&gt;&gt;xx;</span><br><span class="line">        v.<span class="built_in">push_back</span>(xx);</span><br><span class="line">        <span class="type">int</span> tm=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(xx)&#123;tm++;xx&gt;&gt;=<span class="number">1</span>;&#125;</span><br><span class="line">        mb=<span class="built_in">max</span>(mb,tm);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; tt;</span><br><span class="line">    tt.<span class="built_in">push_back</span>(<span class="number">0</span>^v[<span class="number">0</span>]);</span><br><span class="line">    b.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> ss=<span class="number">1</span>;<span class="type">int</span> bi=<span class="number">0</span>;<span class="type">int</span> tmv=v[i];<span class="type">int</span> tmt=tt[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=mb;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((tmt&amp;<span class="number">1</span>)==<span class="number">1</span>&amp;&amp;(tmv&amp;<span class="number">1</span>)==<span class="number">0</span>)&#123;bi+=ss;&#125;</span><br><span class="line">            ss*=<span class="number">2</span>;tmv&gt;&gt;=<span class="number">1</span>;tmt&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        b.<span class="built_in">push_back</span>(bi);tt.<span class="built_in">push_back</span>(bi^v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:b)&#123;</span><br><span class="line">        cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Challenging-Cliffs"><a href="#Challenging-Cliffs" class="headerlink" title="Challenging Cliffs"></a><a href="https://codeforces.com/problemset/problem/1537/C">Challenging Cliffs</a></h1><p><img src="c.jpg" alt=""><br>这题感觉是脑筋急转弯。<br>首先对数组排个序一定能得到最高的难度的。<br>然后考虑如何使得首尾的高度差最小，我们可以很快知道高度差最小的两个一定在排序好的数组中相邻，因此假如我们单独把这最小的两个拿出来放在首尾，那么我们会损失两个难度等级，但是如果我们考虑要是从这两个之间把整个数组切开，后面那部分整块放在前面，前面部分整块移到后面，那么我们可以只损失一个难度等级而使得首尾接近。</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;ll m;ll n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span> &gt; v;</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> xx;cin&gt;&gt;xx,v.<span class="built_in">push_back</span>(xx);</span><br><span class="line">        mp[xx]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(<span class="built_in">All</span>(v));</span><br><span class="line">    <span class="type">int</span> d=INF;<span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i+<span class="number">1</span>]-v[i]&lt;d)&#123;</span><br><span class="line">            cnt=i;d=v[i+<span class="number">1</span>]-v[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line">        cout&lt;&lt;v[<span class="number">0</span>]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;v[<span class="number">1</span>]&lt;&lt;<span class="string">&quot;\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=cnt+<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;v[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line">        cout&lt;&lt;v[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>22.11.4刷题记录</title>
    <url>/2022/11/04/22-11-4%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>忙碌的一天还是要靠写个笔记来结束，还是干自己喜欢的事情舒服。</p>
<hr>
<h1 id="Palindrome-Game-easy-version"><a href="#Palindrome-Game-easy-version" class="headerlink" title="Palindrome Game (easy version)"></a><a href="https://codeforces.com/problemset/problem/1527/B1">Palindrome Game (easy version)</a></h1><p><img src="a.jpg" alt=""><br>这种题想的出就做得出，想不出就做不出了。<br>首先胜负肯定与$0$的个数有关：<br>如果$0$的个数是偶数，那么$Bob$必赢：<br>因为$Bob$只需每次在$Alice$操作的位置的对称的位置操作，然后直到剩下最后一个$0$时对数组进行反转，这样$Bob$的费用永远比$Alice$的少$1$。<br>如果$0$的个数是奇数，那么除了$0$的个数是$1$时，$Alice$必赢:<br>因为个数是奇数就意味着中间肯定为$0$，$Alice$只需要先操作这个位置，然后数组还是保持对称的，那么整个过程将变成$Bob$为先手，参照上面的情况，$Alice$必赢。<br>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;ll m;ll n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;s;<span class="type">int</span> cnt0=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;0&#x27;</span>)cnt0++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt0==<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;BOB\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt0%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;BOB\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;ALICE\n&quot;</span>;<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Lord-of-the-Values"><a href="#Lord-of-the-Values" class="headerlink" title="Lord of the Values"></a><a href="https://codeforces.com/problemset/problem/1523/B">Lord of the Values</a></h1><p><img src="b.jpg" alt=""><br>这题有点小技巧，观察规则以及数据$n$的约束，可以知道答案一定是根据一对数来推出的。<br>对于一对数字$(a,b)$我们总能进行以下步骤变成$(-a,-b)$：</p>
<ul>
<li>将第一个数字加上第二个数字$-&gt;(a+b,b)$</li>
<li>把第二个数字减去第一个数字$-&gt;(a+b,-a)$</li>
<li>将第一个数字加上第二个数字$-&gt;(b,-a)$</li>
<li>把第二个数字减去第一个数字$-&gt;(b,-a-b)$</li>
<li>将第一个数字加上第二个数字$-&gt;(-a,-a-b)$</li>
<li>把第二个数字减去第一个数字$-&gt;(-a,-b)$</li>
</ul>
<p>然后答案就显而易见了<br>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;ll m;ll n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="type">int</span> xx;cin&gt;&gt;xx;&#125;</span><br><span class="line">    cout&lt;&lt;(n/<span class="number">2</span>)*<span class="number">6</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n/<span class="number">2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">3</span>;j++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="number">2</span> * i - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="number">2</span> * i &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="number">2</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="number">2</span> * i - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="number">2</span> * i &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Nastia-and-a-Good-Array"><a href="#Nastia-and-a-Good-Array" class="headerlink" title="Nastia and a Good Array"></a><a href="https://codeforces.com/problemset/problem/1521/B">Nastia and a Good Array</a></h1><p><img src="c.jpg" alt=""><br>这题看到$gcd(a_i,a_{i-1})$就感觉似曾相识，或许我们可以考虑将$a$数组转成连续的数，这样就肯定满足$gcd(a_i,a_{i-1})$。<br>至于怎么转，我选择把最小的数放在首，然后利用规则构造一个递增的连续数列。<br>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios_base::sync_with_stdio(0); cin.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PLL pair<span class="string">&lt;ll,ll&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> All(a) a.begin(),a.end()</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;string s;ll m;ll n;ll k;ll x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n+<span class="number">3</span>)</span></span>;<span class="type">int</span> minx=INF;<span class="type">int</span> minc=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;v[i];</span><br><span class="line">        <span class="keyword">if</span>(minx&gt;v[i])&#123;</span><br><span class="line">            minx=v[i];</span><br><span class="line">            minc=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(minc!=<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;n&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;minc&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;minx&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;v[<span class="number">1</span>]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;n<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;minx&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;minx+i<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IOS</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
</search>
